-- Problem 100: Ultimate Business Intelligence Dashboard Query
-- Level: Complex
-- ============================================================

-- PROBLEM STATEMENT:
-- Write the ultimate query that combines all aspects of business intelligence including real-time analytics, predictive modeling, and strategic insights.

-- ============================================================
-- SOLUTION:
-- ============================================================

WITH RealTimeMetrics AS (SELECT 'Today' AS period, COUNT(s.orderId) AS orders, SUM(od.quantity * od.unitPrice * (1 - od.discount)) AS revenue, COUNT(DISTINCT s.custId) AS customers FROM SalesOrder s JOIN OrderDetail od ON s.orderId = od.orderId WHERE DATE(s.orderDate) = CURDATE() UNION ALL SELECT 'This Month', COUNT(s.orderId), SUM(od.quantity * od.unitPrice * (1 - od.discount)), COUNT(DISTINCT s.custId) FROM SalesOrder s JOIN OrderDetail od ON s.orderId = od.orderId WHERE MONTH(s.orderDate) = MONTH(CURDATE()) AND YEAR(s.orderDate) = YEAR(CURDATE())), PerformanceComparison AS (SELECT rtm.period, rtm.orders, rtm.revenue, rtm.customers, LAG(rtm.orders) OVER (ORDER BY rtm.period DESC) AS prev_orders, LAG(rtm.revenue) OVER (ORDER BY rtm.period DESC) AS prev_revenue FROM RealTimeMetrics rtm), PredictiveInsights AS (SELECT AVG(monthly_revenue) AS avg_monthly_revenue, STDDEV(monthly_revenue) AS revenue_volatility FROM (SELECT DATE_FORMAT(s.orderDate, '%Y-%m') AS month, SUM(od.quantity * od.unitPrice * (1 - od.discount)) AS monthly_revenue FROM SalesOrder s JOIN OrderDetail od ON s.orderId = od.orderId WHERE s.orderDate >= DATE_SUB(CURDATE(), INTERVAL 12 MONTH) GROUP BY DATE_FORMAT(s.orderDate, '%Y-%m')) AS monthly_data), StrategicKPIs AS (SELECT COUNT(DISTINCT c.custId) AS total_customers, COUNT(DISTINCT p.productId) AS active_products, AVG(od.quantity * od.unitPrice * (1 - od.discount)) AS avg_order_value, COUNT(DISTINCT cat.categoryId) AS product_categories FROM Customer c CROSS JOIN Product p CROSS JOIN SalesOrder s JOIN OrderDetail od ON s.orderId = od.orderId JOIN Category cat ON p.categoryId = cat.categoryId WHERE s.orderDate >= DATE_SUB(CURDATE(), INTERVAL 12 MONTH)), BusinessHealth AS (SELECT 'Revenue Growth' AS metric, CASE WHEN pc.revenue > pc.prev_revenue THEN 'Positive' ELSE 'Negative' END AS status FROM PerformanceComparison pc WHERE pc.period = 'This Month' UNION ALL SELECT 'Customer Acquisition', CASE WHEN pc.customers > pc.prev_customers THEN 'Growing' ELSE 'Declining' END FROM (SELECT period, customers, LAG(customers) OVER (ORDER BY period DESC) AS prev_customers FROM RealTimeMetrics) pc WHERE pc.period = 'This Month'), ExecutiveSummary AS (SELECT sk.total_customers, sk.active_products, FORMAT(sk.avg_order_value, 2) AS avg_order_value, pi.avg_monthly_revenue, pi.revenue_volatility, CASE WHEN pi.revenue_volatility < pi.avg_monthly_revenue * 0.1 THEN 'Stable Business' WHEN pi.revenue_volatility < pi.avg_monthly_revenue * 0.2 THEN 'Moderate Volatility' ELSE 'High Volatility' END AS business_stability FROM StrategicKPIs sk CROSS JOIN PredictiveInsights pi) SELECT 'EXECUTIVE DASHBOARD' AS dashboard_title, CONCAT('Customers: ', es.total_customers, ' | Products: ', es.active_products, ' | AOV: , es.avg_order_value) AS key_metrics, CONCAT('Monthly Revenue Avg: , FORMAT(es.avg_monthly_revenue, 2), ' | Stability: ', es.business_stability) AS business_health FROM ExecutiveSummary es;
