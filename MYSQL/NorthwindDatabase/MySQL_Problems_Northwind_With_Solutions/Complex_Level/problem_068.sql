-- Problem 68: Customer Network Analysis and Influence Mapping
-- Level: Complex
-- ============================================================

-- PROBLEM STATEMENT:
-- Write a query to identify influential customers and map customer networks based on similar purchasing patterns.

-- ============================================================
-- SOLUTION:
-- ============================================================

WITH CustomerProductMatrix AS (SELECT c.custId, c.companyName, p.productId, SUM(od.quantity) AS totalQuantity FROM Customer c JOIN SalesOrder s ON c.custId = s.custId JOIN OrderDetail od ON s.orderId = od.orderId JOIN Product p ON od.productId = p.productId GROUP BY c.custId, c.companyName, p.productId), CustomerSimilarity AS (SELECT cpm1.custId AS customer1, cpm2.custId AS customer2, cpm1.companyName AS company1, cpm2.companyName AS company2, COUNT(CASE WHEN cpm1.productId = cpm2.productId THEN 1 END) AS commonProducts, SQRT(SUM(cpm1.totalQuantity * cpm1.totalQuantity)) AS magnitude1, SQRT(SUM(cpm2.totalQuantity * cpm2.totalQuantity)) AS magnitude2, SUM(cpm1.totalQuantity * cpm2.totalQuantity) AS dotProduct FROM CustomerProductMatrix cpm1 JOIN CustomerProductMatrix cpm2 ON cpm1.custId < cpm2.custId AND cpm1.productId = cpm2.productId GROUP BY cpm1.custId, cpm2.custId, cpm1.companyName, cmp2.companyName HAVING COUNT(*) >= 3), CosineSimilarity AS (SELECT customer1, customer2, company1, company2, commonProducts, dotProduct / (magnitude1 * magnitude2) AS similarityScore FROM CustomerSimilarity WHERE magnitude1 > 0 AND magnitude2 > 0), InfluenceMetrics AS (SELECT c.custId, c.companyName, COUNT(DISTINCT s.orderId) AS orderCount, SUM(od.quantity * od.unitPrice * (1 - od.discount)) AS totalSpent, COUNT(DISTINCT p.productId) AS uniqueProducts, AVG(cs.similarityScore) AS avgSimilarityScore FROM Customer c JOIN SalesOrder s ON c.custId = s.custId JOIN OrderDetail od ON s.orderId = od.orderId JOIN Product p ON od.productId = p.productId LEFT JOIN CosineSimilarity cs ON c.custId IN (cs.customer1, cs.customer2) GROUP BY c.custId, c.companyName), InfluenceRanking AS (SELECT custId, companyName, orderCount, totalSpent, uniqueProducts, avgSimilarityScore, (COALESCE(avgSimilarityScore, 0) * 0.3 + (orderCount / MAX(orderCount) OVER ()) * 0.4 + (totalSpent / MAX(totalSpent) OVER ()) * 0.3) AS influenceScore FROM InfluenceMetrics) SELECT companyName, orderCount, totalSpent, uniqueProducts, avgSimilarityScore, influenceScore, CASE WHEN influenceScore >= 0.8 THEN 'High Influence' WHEN influenceScore >= 0.6 THEN 'Medium Influence' ELSE 'Low Influence' END AS influenceLevel FROM InfluenceRanking ORDER BY influenceScore DESC LIMIT 50;
