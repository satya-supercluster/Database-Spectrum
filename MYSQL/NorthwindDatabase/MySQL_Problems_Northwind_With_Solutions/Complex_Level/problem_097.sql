-- Problem 97: Comprehensive Business Intelligence Reporting
-- Level: Complex
-- ============================================================

-- PROBLEM STATEMENT:
-- Write a query to create a comprehensive BI report with executive summary, trends, and recommendations.

-- ============================================================
-- SOLUTION:
-- ============================================================

WITH ExecutiveSummary AS (SELECT COUNT(DISTINCT c.custId) AS total_customers, COUNT(DISTINCT s.orderId) AS total_orders, SUM(od.quantity * od.unitPrice * (1 - od.discount)) AS total_revenue, AVG(od.quantity * od.unitPrice * (1 - od.discount)) AS avg_order_value, COUNT(DISTINCT p.productId) AS active_products FROM Customer c JOIN SalesOrder s ON c.custId = s.custId JOIN OrderDetail od ON s.orderId = od.orderId JOIN Product p ON od.productId = p.productId WHERE s.orderDate >= DATE_SUB(CURDATE(), INTERVAL 12 MONTH)), TrendAnalysis AS (SELECT DATE_FORMAT(s.orderDate, '%Y-%m') AS month, COUNT(s.orderId) AS monthly_orders, SUM(od.quantity * od.unitPrice * (1 - od.discount)) AS monthly_revenue, LAG(COUNT(s.orderId)) OVER (ORDER BY DATE_FORMAT(s.orderDate, '%Y-%m')) AS prev_month_orders, LAG(SUM(od.quantity * od.unitPrice * (1 - od.discount))) OVER (ORDER BY DATE_FORMAT(s.orderDate, '%Y-%m')) AS prev_month_revenue FROM SalesOrder s JOIN OrderDetail od ON s.orderId = od.orderId WHERE s.orderDate >= DATE_SUB(CURDATE(), INTERVAL 12 MONTH) GROUP BY DATE_FORMAT(s.orderDate, '%Y-%m')), PerformanceMetrics AS (SELECT ta.month, ta.monthly_orders, ta.monthly_revenue, CASE WHEN prev_month_orders IS NOT NULL THEN ((monthly_orders - prev_month_orders) / prev_month_orders * 100) ELSE NULL END AS order_growth, CASE WHEN prev_month_revenue IS NOT NULL THEN ((monthly_revenue - prev_month_revenue) / prev_month_revenue * 100) ELSE NULL END AS revenue_growth FROM TrendAnalysis ta), BusinessRecommendations AS (SELECT CASE WHEN AVG(order_growth) > 10 THEN 'Strong Growth - Scale Operations' WHEN AVG(order_growth) > 0 THEN 'Moderate Growth - Optimize Processes' WHEN AVG(order_growth) > -5 THEN 'Stable - Focus on Efficiency' ELSE 'Declining - Urgent Action Required' END AS growth_recommendation, CASE WHEN AVG(revenue_growth) > AVG(order_growth) THEN 'Pricing Strategy Working' ELSE 'Review Pricing Strategy' END AS pricing_recommendation FROM PerformanceMetrics WHERE order_growth IS NOT NULL) SELECT es.total_customers, es.total_orders, FORMAT(es.total_revenue, 2) AS total_revenue, FORMAT(es.avg_order_value, 2) AS avg_order_value, br.growth_recommendation, br.pricing_recommendation FROM ExecutiveSummary es CROSS JOIN BusinessRecommendations br;
