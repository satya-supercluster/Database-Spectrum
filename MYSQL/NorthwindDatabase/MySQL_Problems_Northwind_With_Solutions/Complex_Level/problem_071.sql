-- Problem 71: Advanced Customer Lifetime Value with Churn Prediction
-- Level: Complex
-- ============================================================

-- PROBLEM STATEMENT:
-- Write a query to calculate sophisticated CLV models incorporating churn probability and future value predictions.

-- ============================================================
-- SOLUTION:
-- ============================================================

WITH CustomerTransactionHistory AS (SELECT c.custId, c.companyName, COUNT(s.orderId) AS totalOrders, SUM(od.quantity * od.unitPrice * (1 - od.discount)) AS totalRevenue, MIN(s.orderDate) AS firstOrderDate, MAX(s.orderDate) AS lastOrderDate, AVG(DATEDIFF(s.orderDate, LAG(s.orderDate) OVER (PARTITION BY c.custId ORDER BY s.orderDate))) AS avgDaysBetweenOrders, AVG(od.quantity * od.unitPrice * (1 - od.discount)) AS avgOrderValue FROM Customer c JOIN SalesOrder s ON c.custId = s.custId JOIN OrderDetail od ON s.orderId = od.orderId GROUP BY c.custId, c.companyName), ChurnProbability AS (SELECT custId, companyName, totalOrders, totalRevenue, avgOrderValue, DATEDIFF(CURDATE(), lastOrderDate) AS daysSinceLastOrder, avgDaysBetweenOrders, CASE WHEN DATEDIFF(CURDATE(), lastOrderDate) > (avgDaysBetweenOrders * 3) THEN 0.8 WHEN DATEDIFF(CURDATE(), lastOrderDate) > (avgDaysBetweenOrders * 2) THEN 0.6 WHEN DATEDIFF(CURDATE(), lastOrderDate) > avgDaysBetweenOrders THEN 0.3 ELSE 0.1 END AS churnProbability FROM CustomerTransactionHistory WHERE avgDaysBetweenOrders IS NOT NULL), CLVCalculation AS (SELECT custId, companyName, totalRevenue AS historicalCLV, avgOrderValue, totalOrders, churnProbability, (1 - churnProbability) AS retentionProbability, avgOrderValue * (totalOrders / GREATEST(DATEDIFF(lastOrderDate, firstOrderDate) / 365.25, 0.25)) AS annualOrderRate, avgOrderValue * (totalOrders / GREATEST(DATEDIFF(lastOrderDate, firstOrderDate) / 365.25, 0.25)) * (1 - churnProbability) / 0.1 AS predictedCLV FROM ChurnProbability cp JOIN CustomerTransactionHistory cth ON cp.custId = cth.custId), CLVSegmentation AS (SELECT custId, companyName, historicalCLV, predictedCLV, churnProbability, retentionProbability, CASE WHEN predictedCLV > 5000 AND churnProbability < 0.3 THEN 'High Value - Low Risk' WHEN predictedCLV > 5000 AND churnProbability >= 0.3 THEN 'High Value - High Risk' WHEN predictedCLV > 1000 AND churnProbability < 0.5 THEN 'Medium Value - Low Risk' WHEN predictedCLV > 1000 AND churnProbability >= 0.5 THEN 'Medium Value - High Risk' ELSE 'Low Value' END AS clvSegment FROM CLVCalculation) SELECT clvSegment, COUNT(*) AS customerCount, AVG(historicalCLV) AS avgHistoricalCLV, AVG(predictedCLV) AS avgPredictedCLV, AVG(churnProbability) AS avgChurnProbability, SUM(predictedCLV * retentionProbability) AS totalProjectedValue FROM CLVSegmentation GROUP BY clvSegment ORDER BY avgPredictedCLV DESC;
